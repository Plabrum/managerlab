/**
 * Generated by orval v7.13.2 üç∫
 * Do not edit manually.
 * ManagerLab
 * Private schema of ManagerLab with Scalar OpenAPI docs
 * OpenAPI spec version: 0.0.1
 */
export type ActionDTOIcon = string | null;

export type ActionDTOConfirmationMessage = string | null;

export interface ActionDTO {
  action: string;
  label: string;
  is_bulk_allowed?: boolean;
  available?: boolean;
  priority?: number;
  icon?: ActionDTOIcon;
  confirmation_message?: ActionDTOConfirmationMessage;
  should_redirect_to_parent?: boolean;
}

/**
 * Types of action groups.
 */
export type ActionGroupType = typeof ActionGroupType[keyof typeof ActionGroupType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ActionGroupType = {
  media_actions: 'media_actions',
  top_level_media_actions: 'top_level_media_actions',
  deliverable_actions: 'deliverable_actions',
  top_level_deliverable_actions: 'top_level_deliverable_actions',
  brand_actions: 'brand_actions',
  top_level_brand_actions: 'top_level_brand_actions',
  campaign_actions: 'campaign_actions',
  top_level_campaign_actions: 'top_level_campaign_actions',
  invoice_actions: 'invoice_actions',
  top_level_invoice_actions: 'top_level_invoice_actions',
  roster_actions: 'roster_actions',
  top_level_roster_actions: 'top_level_roster_actions',
  dashboard_actions: 'dashboard_actions',
  team_actions: 'team_actions',
  message_actions: 'message_actions',
} as const;

export interface ActionListResponse {
  actions: ActionDTO[];
}

export interface AddMediaToDeliverableAction {
  data: AddMediaToDeliverableSchema;
  action: 'deliverable_actions__deliverable_add_media';
}

export interface AddMediaToDeliverableSchema {
  media_ids: unknown[];
}

/**
 * Aggregation types for time series data.
 */
export type AggregationType = typeof AggregationType[keyof typeof AggregationType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const AggregationType = {
  sum: 'sum',
  avg: 'avg',
  max: 'max',
  min: 'min',
  count_: 'count_',
  mode: 'mode',
} as const;

export interface BatchUnreadRequest {
  object_ids: unknown[];
}

export interface BatchUnreadResponse {
  threads: ThreadUnreadInfo[];
  total_unread: number;
}

export interface BoolFieldValue {
  value: boolean;
  type: 'bool';
}

export interface BooleanFilterDefinition {
  column: string;
  value: boolean;
  type: 'boolean_filter';
}

export type BrandContactSchemaEmail = string | null;

export type BrandContactSchemaPhone = string | null;

export type BrandContactSchemaNotes = string | null;

export type BrandContactSchemaTeamId = number | null;

export interface BrandContactSchema {
  id: unknown;
  first_name: string;
  last_name: string;
  email?: BrandContactSchemaEmail;
  phone?: BrandContactSchemaPhone;
  notes?: BrandContactSchemaNotes;
  brand_id: number;
  created_at: string;
  updated_at: string;
  team_id?: BrandContactSchemaTeamId;
  actions?: ActionDTO[];
}

export type BrandContactUpdateSchemaFirstName = string | null;

export type BrandContactUpdateSchemaLastName = string | null;

export type BrandContactUpdateSchemaEmail = string | null;

export type BrandContactUpdateSchemaPhone = string | null;

export type BrandContactUpdateSchemaNotes = string | null;

export type BrandContactUpdateSchemaBrandId = number | null;

export interface BrandContactUpdateSchema {
  first_name?: BrandContactUpdateSchemaFirstName;
  last_name?: BrandContactUpdateSchemaLastName;
  email?: BrandContactUpdateSchemaEmail;
  phone?: BrandContactUpdateSchemaPhone;
  notes?: BrandContactUpdateSchemaNotes;
  brand_id?: BrandContactUpdateSchemaBrandId;
}

export type BrandCreateSchemaDescription = string | null;

export type BrandCreateSchemaWebsite = string | null;

export type BrandCreateSchemaEmail = string | null;

export type BrandCreateSchemaPhone = string | null;

export type BrandCreateSchemaNotes = string | null;

export interface BrandCreateSchema {
  name: string;
  description?: BrandCreateSchemaDescription;
  website?: BrandCreateSchemaWebsite;
  email?: BrandCreateSchemaEmail;
  phone?: BrandCreateSchemaPhone;
  notes?: BrandCreateSchemaNotes;
}

export type BrandSchemaDescription = string | null;

export type BrandSchemaWebsite = string | null;

export type BrandSchemaEmail = string | null;

export type BrandSchemaPhone = string | null;

export type BrandSchemaNotes = string | null;

export type BrandSchemaTeamId = number | null;

export interface BrandSchema {
  id: unknown;
  name: string;
  description?: BrandSchemaDescription;
  website?: BrandSchemaWebsite;
  email?: BrandSchemaEmail;
  phone?: BrandSchemaPhone;
  notes?: BrandSchemaNotes;
  created_at: string;
  updated_at: string;
  team_id?: BrandSchemaTeamId;
  actions: ActionDTO[];
}

export type BrandUpdateSchemaName = string | null;

export type BrandUpdateSchemaDescription = string | null;

export type BrandUpdateSchemaWebsite = string | null;

export type BrandUpdateSchemaEmail = string | null;

export type BrandUpdateSchemaPhone = string | null;

export type BrandUpdateSchemaNotes = string | null;

export interface BrandUpdateSchema {
  name?: BrandUpdateSchemaName;
  description?: BrandUpdateSchemaDescription;
  website?: BrandUpdateSchemaWebsite;
  email?: BrandUpdateSchemaEmail;
  phone?: BrandUpdateSchemaPhone;
  notes?: BrandUpdateSchemaNotes;
}

export type CampaignCreateSchemaDescription = string | null;

export type CampaignCreateSchemaCompensationStructure = CompensationStructure | null;

export type CampaignCreateSchemaCounterpartyType = CounterpartyType | null;

export type CampaignCreateSchemaCounterpartyName = string | null;

export type CampaignCreateSchemaCounterpartyEmail = string | null;

export type CampaignCreateSchemaCompensationTotalUsd = number | null;

export type CampaignCreateSchemaPaymentTermsDays = number | null;

export type CampaignCreateSchemaFlightStartDate = string | null;

export type CampaignCreateSchemaFlightEndDate = string | null;

export type CampaignCreateSchemaFtcString = string | null;

export type CampaignCreateSchemaUsageDuration = string | null;

export type CampaignCreateSchemaUsageTerritory = string | null;

export type CampaignCreateSchemaUsagePaidMediaOption = boolean | null;

export type CampaignCreateSchemaExclusivityCategory = string | null;

export type CampaignCreateSchemaExclusivityDaysBefore = number | null;

export type CampaignCreateSchemaExclusivityDaysAfter = number | null;

export type CampaignCreateSchemaOwnershipMode = OwnershipMode | null;

export type CampaignCreateSchemaApprovalRounds = number | null;

export type CampaignCreateSchemaApprovalSlaHours = number | null;

export interface CampaignCreateSchema {
  name: string;
  brand_id: unknown;
  description?: CampaignCreateSchemaDescription;
  compensation_structure?: CampaignCreateSchemaCompensationStructure;
  counterparty_type?: CampaignCreateSchemaCounterpartyType;
  counterparty_name?: CampaignCreateSchemaCounterpartyName;
  counterparty_email?: CampaignCreateSchemaCounterpartyEmail;
  compensation_total_usd?: CampaignCreateSchemaCompensationTotalUsd;
  payment_terms_days?: CampaignCreateSchemaPaymentTermsDays;
  flight_start_date?: CampaignCreateSchemaFlightStartDate;
  flight_end_date?: CampaignCreateSchemaFlightEndDate;
  ftc_string?: CampaignCreateSchemaFtcString;
  usage_duration?: CampaignCreateSchemaUsageDuration;
  usage_territory?: CampaignCreateSchemaUsageTerritory;
  usage_paid_media_option?: CampaignCreateSchemaUsagePaidMediaOption;
  exclusivity_category?: CampaignCreateSchemaExclusivityCategory;
  exclusivity_days_before?: CampaignCreateSchemaExclusivityDaysBefore;
  exclusivity_days_after?: CampaignCreateSchemaExclusivityDaysAfter;
  ownership_mode?: CampaignCreateSchemaOwnershipMode;
  approval_rounds?: CampaignCreateSchemaApprovalRounds;
  approval_sla_hours?: CampaignCreateSchemaApprovalSlaHours;
}

/**
 * Access levels for campaign guests.
 */
export type CampaignGuestAccessLevel = typeof CampaignGuestAccessLevel[keyof typeof CampaignGuestAccessLevel];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CampaignGuestAccessLevel = {
  viewer: 'viewer',
  contributor: 'contributor',
} as const;

export type CampaignSchemaDescription = string | null;

export type CampaignSchemaCompensationStructure = CompensationStructure | null;

export type CampaignSchemaAssignedRosterId = number | null;

export type CampaignSchemaTeamId = number | null;

export type CampaignSchemaCounterpartyType = CounterpartyType | null;

export type CampaignSchemaCounterpartyName = string | null;

export type CampaignSchemaCounterpartyEmail = string | null;

export type CampaignSchemaCompensationTotalUsd = number | null;

export type CampaignSchemaPaymentTermsDays = number | null;

export type CampaignSchemaFlightStartDate = string | null;

export type CampaignSchemaFlightEndDate = string | null;

export type CampaignSchemaFtcString = string | null;

export type CampaignSchemaUsageDuration = string | null;

export type CampaignSchemaUsageTerritory = string | null;

export type CampaignSchemaUsagePaidMediaOption = boolean | null;

export type CampaignSchemaExclusivityCategory = string | null;

export type CampaignSchemaExclusivityDaysBefore = number | null;

export type CampaignSchemaExclusivityDaysAfter = number | null;

export type CampaignSchemaOwnershipMode = OwnershipMode | null;

export type CampaignSchemaApprovalRounds = number | null;

export type CampaignSchemaApprovalSlaHours = number | null;

export interface CampaignSchema {
  id: unknown;
  name: string;
  description?: CampaignSchemaDescription;
  compensation_structure?: CampaignSchemaCompensationStructure;
  assigned_roster_id?: CampaignSchemaAssignedRosterId;
  brand_id: number;
  state: string;
  created_at: string;
  updated_at: string;
  team_id?: CampaignSchemaTeamId;
  actions: ActionDTO[];
  counterparty_type?: CampaignSchemaCounterpartyType;
  counterparty_name?: CampaignSchemaCounterpartyName;
  counterparty_email?: CampaignSchemaCounterpartyEmail;
  compensation_total_usd?: CampaignSchemaCompensationTotalUsd;
  payment_terms_days?: CampaignSchemaPaymentTermsDays;
  flight_start_date?: CampaignSchemaFlightStartDate;
  flight_end_date?: CampaignSchemaFlightEndDate;
  ftc_string?: CampaignSchemaFtcString;
  usage_duration?: CampaignSchemaUsageDuration;
  usage_territory?: CampaignSchemaUsageTerritory;
  usage_paid_media_option?: CampaignSchemaUsagePaidMediaOption;
  exclusivity_category?: CampaignSchemaExclusivityCategory;
  exclusivity_days_before?: CampaignSchemaExclusivityDaysBefore;
  exclusivity_days_after?: CampaignSchemaExclusivityDaysAfter;
  ownership_mode?: CampaignSchemaOwnershipMode;
  approval_rounds?: CampaignSchemaApprovalRounds;
  approval_sla_hours?: CampaignSchemaApprovalSlaHours;
}

export interface CampaignScopeSchema {
  campaign_id: number;
  campaign_name: string;
  team_id: number;
  team_name: string;
  access_level: CampaignGuestAccessLevel;
}

export type CampaignUpdateSchemaName = string | null;

export type CampaignUpdateSchemaDescription = string | null;

export type CampaignUpdateSchemaBrandId = number | null;

export type CampaignUpdateSchemaCompensationStructure = CompensationStructure | null;

export type CampaignUpdateSchemaCounterpartyType = CounterpartyType | null;

export type CampaignUpdateSchemaCounterpartyName = string | null;

export type CampaignUpdateSchemaCounterpartyEmail = string | null;

export type CampaignUpdateSchemaCompensationTotalUsd = number | null;

export type CampaignUpdateSchemaPaymentTermsDays = number | null;

export type CampaignUpdateSchemaFlightStartDate = string | null;

export type CampaignUpdateSchemaFlightEndDate = string | null;

export type CampaignUpdateSchemaFtcString = string | null;

export type CampaignUpdateSchemaUsageDuration = string | null;

export type CampaignUpdateSchemaUsageTerritory = string | null;

export type CampaignUpdateSchemaUsagePaidMediaOption = boolean | null;

export type CampaignUpdateSchemaExclusivityCategory = string | null;

export type CampaignUpdateSchemaExclusivityDaysBefore = number | null;

export type CampaignUpdateSchemaExclusivityDaysAfter = number | null;

export type CampaignUpdateSchemaOwnershipMode = OwnershipMode | null;

export type CampaignUpdateSchemaApprovalRounds = number | null;

export type CampaignUpdateSchemaApprovalSlaHours = number | null;

export interface CampaignUpdateSchema {
  name?: CampaignUpdateSchemaName;
  description?: CampaignUpdateSchemaDescription;
  brand_id?: CampaignUpdateSchemaBrandId;
  compensation_structure?: CampaignUpdateSchemaCompensationStructure;
  counterparty_type?: CampaignUpdateSchemaCounterpartyType;
  counterparty_name?: CampaignUpdateSchemaCounterpartyName;
  counterparty_email?: CampaignUpdateSchemaCounterpartyEmail;
  compensation_total_usd?: CampaignUpdateSchemaCompensationTotalUsd;
  payment_terms_days?: CampaignUpdateSchemaPaymentTermsDays;
  flight_start_date?: CampaignUpdateSchemaFlightStartDate;
  flight_end_date?: CampaignUpdateSchemaFlightEndDate;
  ftc_string?: CampaignUpdateSchemaFtcString;
  usage_duration?: CampaignUpdateSchemaUsageDuration;
  usage_territory?: CampaignUpdateSchemaUsageTerritory;
  usage_paid_media_option?: CampaignUpdateSchemaUsagePaidMediaOption;
  exclusivity_category?: CampaignUpdateSchemaExclusivityCategory;
  exclusivity_days_before?: CampaignUpdateSchemaExclusivityDaysBefore;
  exclusivity_days_after?: CampaignUpdateSchemaExclusivityDaysAfter;
  ownership_mode?: CampaignUpdateSchemaOwnershipMode;
  approval_rounds?: CampaignUpdateSchemaApprovalRounds;
  approval_sla_hours?: CampaignUpdateSchemaApprovalSlaHours;
}

export type CategoricalDataPointBreakdowns = {[key: string]: number};

export interface CategoricalDataPoint {
  timestamp: string;
  breakdowns: CategoricalDataPointBreakdowns;
  total_count: number;
}

export interface CategoricalTimeSeriesData {
  data_points: CategoricalDataPoint[];
  type: 'categorical';
}

export type ColumnDefinitionDTOAvailableValues = string[] | null;

export interface ColumnDefinitionDTO {
  key: string;
  label: string;
  type: FieldType;
  filter_type: FilterType;
  sortable?: boolean;
  default_visible?: boolean;
  available_values?: ColumnDefinitionDTOAvailableValues;
}

export type CompensationStructure = typeof CompensationStructure[keyof typeof CompensationStructure];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CompensationStructure = {
  flat_fee: 'flat_fee',
  per_deliverable: 'per_deliverable',
  performance_based: 'performance_based',
} as const;

/**
 * Type of counterparty in a campaign deal.
 */
export type CounterpartyType = typeof CounterpartyType[keyof typeof CounterpartyType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const CounterpartyType = {
  agency: 'agency',
  brand: 'brand',
} as const;

export interface CreateBrandAction {
  data: BrandCreateSchema;
  action: 'top_level_brand_actions__brand_create';
}

export interface CreateCampaignAction {
  data: CampaignCreateSchema;
  action: 'top_level_campaign_actions__campaign_create';
}

export type CreateDashboardSchemaConfig = {[key: string]: unknown};

export type CreateDashboardSchemaUserId = number | null;

export type CreateDashboardSchemaTeamId = number | null;

export interface CreateDashboardSchema {
  name: string;
  config: CreateDashboardSchemaConfig;
  owner_type: DashboardOwnerType;
  user_id?: CreateDashboardSchemaUserId;
  team_id?: CreateDashboardSchemaTeamId;
  is_default?: boolean;
}

export interface CreateDeliverableAction {
  data: DeliverableCreateSchema;
  action: 'top_level_deliverable_actions__top_level_deliverable_create';
}

export interface CreateInvoiceAction {
  data: InvoiceCreateSchema;
  action: 'top_level_invoice_actions__invoice_create';
}

export interface CreateMediaAction {
  data: RegisterMediaSchema;
  action: 'top_level_media_actions__top_level_media_create';
}

export interface CreateRosterAction {
  data: RosterCreateSchema;
  action: 'top_level_roster_actions__top_level_roster_create';
}

export type CreateTeamSchemaDescription = string | null;

export interface CreateTeamSchema {
  name: string;
  description?: CreateTeamSchemaDescription;
}

export interface CreateUserSchema {
  name: string;
  email: string;
}

/**
 * Dashboard ownership types.
 */
export type DashboardOwnerType = typeof DashboardOwnerType[keyof typeof DashboardOwnerType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DashboardOwnerType = {
  user: 'user',
  team: 'team',
} as const;

export type DashboardSchemaConfig = {[key: string]: unknown};

export type DashboardSchemaUserId = number | null;

export type DashboardSchemaTeamId = number | null;

export interface DashboardSchema {
  id: unknown;
  name: string;
  config: DashboardSchemaConfig;
  owner_type: DashboardOwnerType;
  user_id?: DashboardSchemaUserId;
  team_id?: DashboardSchemaTeamId;
  is_default: boolean;
  created_at: string;
  updated_at: string;
}

export interface DateFieldValue {
  value: string;
  type: 'date';
}

export type DateFilterDefinitionStart = string | null;

export type DateFilterDefinitionFinish = string | null;

export interface DateFilterDefinition {
  column: string;
  start?: DateFilterDefinitionStart;
  finish?: DateFilterDefinitionFinish;
  type: 'date_filter';
}

export interface DatetimeFieldValue {
  value: string;
  type: 'datetime';
}

export const DeleteBrandActionValue = {
  action: 'brand_actions__brand_delete',
} as const;
export type DeleteBrandAction = typeof DeleteBrandActionValue;

export const DeleteCampaignActionValue = {
  action: 'campaign_actions__campaign_delete',
} as const;
export type DeleteCampaignAction = typeof DeleteCampaignActionValue;

export const DeleteDashboardActionValue = {
  action: 'dashboard_actions__delete',
} as const;
export type DeleteDashboardAction = typeof DeleteDashboardActionValue;

export const DeleteDeliverableActionValue = {
  action: 'deliverable_actions__deliverable_delete',
} as const;
export type DeleteDeliverableAction = typeof DeleteDeliverableActionValue;

export const DeleteInvoiceActionValue = {
  action: 'invoice_actions__invoice_delete',
} as const;
export type DeleteInvoiceAction = typeof DeleteInvoiceActionValue;

export const DeleteMediaActionValue = {
  action: 'media_actions__media_delete',
} as const;
export type DeleteMediaAction = typeof DeleteMediaActionValue;

export const DeleteMessageActionValue = {
  action: 'message_actions__delete',
} as const;
export type DeleteMessageAction = typeof DeleteMessageActionValue;

export const DeleteRosterActionValue = {
  action: 'roster_actions__roster_delete',
} as const;
export type DeleteRosterAction = typeof DeleteRosterActionValue;

export const DeleteTeamActionValue = {
  action: 'team_actions__team_delete',
} as const;
export type DeleteTeamAction = typeof DeleteTeamActionValue;

export type DeliverableCreateSchemaDeliverableType = DeliverableType | null;

export type DeliverableCreateSchemaPostingStartDate = string | null;

export type DeliverableCreateSchemaPostingEndDate = string | null;

export type DeliverableCreateSchemaHandles = string[] | null;

export type DeliverableCreateSchemaHashtags = string[] | null;

export type DeliverableCreateSchemaDisclosures = string[] | null;

export type DeliverableCreateSchemaApprovalRounds = number | null;

export type DeliverableCreateSchemaContent = string | null;

export type DeliverableCreateSchemaNotesOneOf = {[key: string]: unknown};

export type DeliverableCreateSchemaNotes = DeliverableCreateSchemaNotesOneOf | null;

export type DeliverableCreateSchemaCampaignId = number | null;

export interface DeliverableCreateSchema {
  title: string;
  platforms: SocialMediaPlatforms;
  posting_date: string;
  deliverable_type?: DeliverableCreateSchemaDeliverableType;
  count?: number;
  posting_start_date?: DeliverableCreateSchemaPostingStartDate;
  posting_end_date?: DeliverableCreateSchemaPostingEndDate;
  handles?: DeliverableCreateSchemaHandles;
  hashtags?: DeliverableCreateSchemaHashtags;
  disclosures?: DeliverableCreateSchemaDisclosures;
  approval_required?: boolean;
  approval_rounds?: DeliverableCreateSchemaApprovalRounds;
  content?: DeliverableCreateSchemaContent;
  notes?: DeliverableCreateSchemaNotes;
  campaign_id?: DeliverableCreateSchemaCampaignId;
}

export type DeliverableMediaAssociationSchemaApprovedAt = string | null;

export interface DeliverableMediaAssociationSchema {
  approved_at?: DeliverableMediaAssociationSchemaApprovedAt;
  is_featured: boolean;
  media: MediaResponseSchema;
  created_at: string;
  updated_at: string;
}

export type DeliverableResponseSchemaContent = string | null;

export type DeliverableResponseSchemaDeliverableType = DeliverableType | null;

export type DeliverableResponseSchemaPostingStartDate = string | null;

export type DeliverableResponseSchemaPostingEndDate = string | null;

export type DeliverableResponseSchemaHandles = string[] | null;

export type DeliverableResponseSchemaHashtags = string[] | null;

export type DeliverableResponseSchemaDisclosures = string[] | null;

export type DeliverableResponseSchemaApprovalRounds = number | null;

export type DeliverableResponseSchemaNotes = {[key: string]: unknown};

export type DeliverableResponseSchemaCampaignId = number | null;

export type DeliverableResponseSchemaAssignedRoster = RosterInDeliverableSchema | null;

export interface DeliverableResponseSchema {
  id: unknown;
  title: string;
  content?: DeliverableResponseSchemaContent;
  platforms: SocialMediaPlatforms;
  deliverable_type?: DeliverableResponseSchemaDeliverableType;
  count: number;
  posting_date: string;
  posting_start_date?: DeliverableResponseSchemaPostingStartDate;
  posting_end_date?: DeliverableResponseSchemaPostingEndDate;
  handles?: DeliverableResponseSchemaHandles;
  hashtags?: DeliverableResponseSchemaHashtags;
  disclosures?: DeliverableResponseSchemaDisclosures;
  approval_required: boolean;
  approval_rounds?: DeliverableResponseSchemaApprovalRounds;
  notes: DeliverableResponseSchemaNotes;
  state: string;
  campaign_id?: DeliverableResponseSchemaCampaignId;
  created_at: string;
  updated_at: string;
  deliverable_media_associations: DeliverableMediaAssociationSchema[];
  assigned_roster?: DeliverableResponseSchemaAssignedRoster;
  actions: ActionDTO[];
}

/**
 * Types of deliverables for various platforms.
 */
export type DeliverableType = typeof DeliverableType[keyof typeof DeliverableType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const DeliverableType = {
  instagram_feed_post: 'instagram_feed_post',
  instagram_story_frame: 'instagram_story_frame',
  instagram_reel: 'instagram_reel',
  instagram_carousel: 'instagram_carousel',
  tiktok_video: 'tiktok_video',
  tiktok_photo_post: 'tiktok_photo_post',
  youtube_video: 'youtube_video',
  youtube_short: 'youtube_short',
  youtube_community_post: 'youtube_community_post',
  facebook_post: 'facebook_post',
  facebook_story: 'facebook_story',
  facebook_reel: 'facebook_reel',
  blog_post: 'blog_post',
  podcast_episode: 'podcast_episode',
  email_newsletter: 'email_newsletter',
} as const;

export type DeliverableUpdateSchemaTitle = string | null;

export type DeliverableUpdateSchemaContent = string | null;

export type DeliverableUpdateSchemaPlatforms = SocialMediaPlatforms | null;

export type DeliverableUpdateSchemaDeliverableType = DeliverableType | null;

export type DeliverableUpdateSchemaCount = number | null;

export type DeliverableUpdateSchemaPostingDate = string | null;

export type DeliverableUpdateSchemaPostingStartDate = string | null;

export type DeliverableUpdateSchemaPostingEndDate = string | null;

export type DeliverableUpdateSchemaHandles = string[] | null;

export type DeliverableUpdateSchemaHashtags = string[] | null;

export type DeliverableUpdateSchemaDisclosures = string[] | null;

export type DeliverableUpdateSchemaApprovalRequired = boolean | null;

export type DeliverableUpdateSchemaApprovalRounds = number | null;

export type DeliverableUpdateSchemaNotesOneOf = {[key: string]: unknown};

export type DeliverableUpdateSchemaNotes = DeliverableUpdateSchemaNotesOneOf | null;

export type DeliverableUpdateSchemaCampaignId = number | null;

export interface DeliverableUpdateSchema {
  title?: DeliverableUpdateSchemaTitle;
  content?: DeliverableUpdateSchemaContent;
  platforms?: DeliverableUpdateSchemaPlatforms;
  deliverable_type?: DeliverableUpdateSchemaDeliverableType;
  count?: DeliverableUpdateSchemaCount;
  posting_date?: DeliverableUpdateSchemaPostingDate;
  posting_start_date?: DeliverableUpdateSchemaPostingStartDate;
  posting_end_date?: DeliverableUpdateSchemaPostingEndDate;
  handles?: DeliverableUpdateSchemaHandles;
  hashtags?: DeliverableUpdateSchemaHashtags;
  disclosures?: DeliverableUpdateSchemaDisclosures;
  approval_required?: DeliverableUpdateSchemaApprovalRequired;
  approval_rounds?: DeliverableUpdateSchemaApprovalRounds;
  notes?: DeliverableUpdateSchemaNotes;
  campaign_id?: DeliverableUpdateSchemaCampaignId;
}

export const DownloadMediaActionValue = {
  action: 'media_actions__media_download',
} as const;
export type DownloadMediaAction = typeof DownloadMediaActionValue;

export interface EditDeliverableAction {
  data: DeliverableUpdateSchema;
  action: 'deliverable_actions__deliverable_update';
}

export interface EmailFieldValue {
  value: string;
  type: 'email';
}

export interface EnumFieldValue {
  value: string;
  type: 'enum';
}

export interface EnumFilterDefinition {
  column: string;
  values: string[];
  type: 'enum_filter';
}

/**
 * Field types for object fields.
 */
export type FieldType = typeof FieldType[keyof typeof FieldType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const FieldType = {
  string: 'string',
  int: 'int',
  float: 'float',
  enum: 'enum',
  bool: 'bool',
  date: 'date',
  datetime: 'datetime',
  usd: 'usd',
  email: 'email',
  url: 'url',
  text: 'text',
  image: 'image',
} as const;

/**
 * Available filter types for different field types.
 */
export type FilterType = typeof FilterType[keyof typeof FilterType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const FilterType = {
  text_filter: 'text_filter',
  range_filter: 'range_filter',
  date_filter: 'date_filter',
  boolean_filter: 'boolean_filter',
  enum_filter: 'enum_filter',
  null_filter: 'null_filter',
} as const;

export interface FloatFieldValue {
  value: number;
  type: 'float';
}

export type GoogleUserInfoResponseSchemaPicture = string | null;

export interface GoogleUserInfoResponseSchema {
  google_id: string;
  email: string;
  name: string;
  picture?: GoogleUserInfoResponseSchemaPicture;
  user_id: number;
}

/**
 * Time series granularity/bucketing options.
 */
export type Granularity = typeof Granularity[keyof typeof Granularity];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const Granularity = {
  automatic: 'automatic',
  hour: 'hour',
  day: 'day',
  week: 'week',
  month: 'month',
  quarter: 'quarter',
  year: 'year',
} as const;

export type ImageFieldValueThumbnailUrl = string | null;

export interface ImageFieldValue {
  url: string;
  thumbnail_url?: ImageFieldValueThumbnailUrl;
  type: 'image';
}

export interface IntFieldValue {
  value: number;
  type: 'int';
}

export type InvoiceCreateSchemaDescription = string | null;

export type InvoiceCreateSchemaNotes = string | null;

export type InvoiceCreateSchemaCampaignId = number | null;

export interface InvoiceCreateSchema {
  invoice_number: number;
  customer_name: string;
  customer_email: string;
  posting_date: string;
  due_date: string;
  amount_due: number;
  amount_paid?: number;
  description?: InvoiceCreateSchemaDescription;
  notes?: InvoiceCreateSchemaNotes;
  campaign_id?: InvoiceCreateSchemaCampaignId;
}

export type InvoiceSchemaDescription = string | null;

export type InvoiceSchemaNotes = string | null;

export type InvoiceSchemaCampaignId = number | null;

export type InvoiceSchemaTeamId = number | null;

export interface InvoiceSchema {
  id: unknown;
  invoice_number: number;
  customer_name: string;
  customer_email: string;
  posting_date: string;
  due_date: string;
  amount_due: number;
  amount_paid: number;
  description?: InvoiceSchemaDescription;
  notes?: InvoiceSchemaNotes;
  state: string;
  created_at: string;
  updated_at: string;
  campaign_id?: InvoiceSchemaCampaignId;
  team_id?: InvoiceSchemaTeamId;
  actions: ActionDTO[];
}

export type InvoiceUpdateSchemaInvoiceNumber = number | null;

export type InvoiceUpdateSchemaCustomerName = string | null;

export type InvoiceUpdateSchemaCustomerEmail = string | null;

export type InvoiceUpdateSchemaPostingDate = string | null;

export type InvoiceUpdateSchemaDueDate = string | null;

export type InvoiceUpdateSchemaAmountDue = number | null;

export type InvoiceUpdateSchemaAmountPaid = number | null;

export type InvoiceUpdateSchemaDescription = string | null;

export type InvoiceUpdateSchemaNotes = string | null;

export type InvoiceUpdateSchemaCampaignId = number | null;

export interface InvoiceUpdateSchema {
  invoice_number?: InvoiceUpdateSchemaInvoiceNumber;
  customer_name?: InvoiceUpdateSchemaCustomerName;
  customer_email?: InvoiceUpdateSchemaCustomerEmail;
  posting_date?: InvoiceUpdateSchemaPostingDate;
  due_date?: InvoiceUpdateSchemaDueDate;
  amount_due?: InvoiceUpdateSchemaAmountDue;
  amount_paid?: InvoiceUpdateSchemaAmountPaid;
  description?: InvoiceUpdateSchemaDescription;
  notes?: InvoiceUpdateSchemaNotes;
  campaign_id?: InvoiceUpdateSchemaCampaignId;
}

export type ListScopesResponseCurrentScopeType = string | null;

export type ListScopesResponseCurrentScopeId = number | null;

export interface ListScopesResponse {
  teams: TeamScopeSchema[];
  campaigns: CampaignScopeSchema[];
  current_scope_type?: ListScopesResponseCurrentScopeType;
  current_scope_id?: ListScopesResponseCurrentScopeId;
}

export type ListTeamsResponseCurrentTeamId = number | null;

export interface ListTeamsResponse {
  teams: TeamListItemSchema[];
  current_team_id?: ListTeamsResponseCurrentTeamId;
  is_campaign_scoped: boolean;
}

export type MediaResponseSchemaThumbnailUrl = string | null;

export interface MediaResponseSchema {
  id: unknown;
  file_name: string;
  file_type: string;
  file_size: number;
  mime_type: string;
  state: string;
  created_at: string;
  updated_at: string;
  view_url: string;
  thumbnail_url?: MediaResponseSchemaThumbnailUrl;
  actions: ActionDTO[];
}

export type MediaSchemaTeamId = number | null;

export type MediaSchemaCampaignId = number | null;

export interface MediaSchema {
  id: unknown;
  file_name: string;
  file_type: string;
  file_size: number;
  mime_type: string;
  state: string;
  created_at: string;
  updated_at: string;
  team_id?: MediaSchemaTeamId;
  campaign_id?: MediaSchemaCampaignId;
}

export type MediaUpdateSchemaFileName = string | null;

export interface MediaUpdateSchema {
  file_name?: MediaUpdateSchemaFileName;
}

export interface MessageCreateSchema {
  content: string;
}

export interface MessageListResponse {
  messages: MessageSchema[];
  offset: number;
  limit: number;
}

export interface MessageSchema {
  id: unknown;
  thread_id: unknown;
  user_id: unknown;
  content: string;
  created_at: string;
  updated_at: string;
  user: ThreadsSchemasUserSchema;
}

export interface MessageUpdateSchema {
  content: string;
}

export type NumericalDataPointValue = number | number | null;

export interface NumericalDataPoint {
  timestamp: string;
  value?: NumericalDataPointValue;
  count: number;
}

export interface NumericalTimeSeriesData {
  data_points: NumericalDataPoint[];
  type: 'numerical';
}

export interface ObjectDetailDTO {
  id: string;
  object_type: ObjectTypes;
  state: string;
  title: string;
  fields: ObjectFieldDTO[];
  actions: ActionDTO[];
  created_at: string;
  updated_at: string;
  relations?: ObjectRelationGroup[];
}

export type ObjectFieldDTOValue = StringFieldValue | IntFieldValue | FloatFieldValue | BoolFieldValue | EnumFieldValue | DateFieldValue | DatetimeFieldValue | USDFieldValue | EmailFieldValue | URLFieldValue | TextFieldValue | ImageFieldValue | null;

export type ObjectFieldDTOLabel = string | null;

export interface ObjectFieldDTO {
  key: string;
  value?: ObjectFieldDTOValue;
  label?: ObjectFieldDTOLabel;
  editable?: boolean;
}

export type ObjectListDTOSubtitle = string | null;

export type ObjectListDTOLink = string | null;

export interface ObjectListDTO {
  id: string;
  object_type: ObjectTypes;
  title: string;
  state: string;
  created_at: string;
  updated_at: string;
  subtitle?: ObjectListDTOSubtitle;
  actions?: ActionDTO[];
  fields?: ObjectFieldDTO[];
  link?: ObjectListDTOLink;
}

export type ObjectListRequestFiltersItem = TextFilterDefinition | RangeFilterDefinition | DateFilterDefinition | BooleanFilterDefinition | EnumFilterDefinition;

export type ObjectListRequestSearch = string | null;

export type ObjectListRequestColumn = string[] | null;

export interface ObjectListRequest {
  limit?: number;
  offset?: number;
  filters?: ObjectListRequestFiltersItem[];
  sorts?: SortDefinition[];
  search?: ObjectListRequestSearch;
  column?: ObjectListRequestColumn;
}

export interface ObjectListResponse {
  objects: ObjectListDTO[];
  total: number;
  limit: number;
  offset: number;
  columns: ColumnDefinitionDTO[];
  actions?: ActionDTO[];
}

export interface ObjectRelationGroup {
  relation_name: string;
  relation_label: string;
  relation_type: RelationType;
  cardinality: RelationCardinality;
  objects: ObjectListDTO[];
}

export interface ObjectSchemaResponse {
  columns: ColumnDefinitionDTO[];
}

export type ObjectTypes = typeof ObjectTypes[keyof typeof ObjectTypes];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ObjectTypes = {
  users: 'users',
  roster: 'roster',
  teams: 'teams',
  brands: 'brands',
  brandcontacts: 'brandcontacts',
  campaigns: 'campaigns',
  deliverables: 'deliverables',
  media: 'media',
  invoices: 'invoices',
} as const;

/**
 * Content ownership mode.
 */
export type OwnershipMode = typeof OwnershipMode[keyof typeof OwnershipMode];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const OwnershipMode = {
  brand_owned: 'brand_owned',
  creator_owned: 'creator_owned',
  shared: 'shared',
} as const;

export interface PresignedUploadRequestSchema {
  file_name: string;
  content_type: string;
  file_size: number;
}

export interface PresignedUploadResponseSchema {
  upload_url: string;
  file_key: string;
}

export const PublishDeliverableActionValue = {
  action: 'deliverable_actions__deliverable_publish',
} as const;
export type PublishDeliverableAction = typeof PublishDeliverableActionValue;

export type RangeFilterDefinitionStart = number | number | null;

export type RangeFilterDefinitionFinish = number | number | null;

export interface RangeFilterDefinition {
  column: string;
  start?: RangeFilterDefinitionStart;
  finish?: RangeFilterDefinitionFinish;
  type: 'range_filter';
}

export interface RegisterMediaSchema {
  file_key: string;
  file_name: string;
  file_size: number;
  mime_type: string;
}

/**
 * Cardinality of a relationship.
 */
export type RelationCardinality = typeof RelationCardinality[keyof typeof RelationCardinality];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RelationCardinality = {
  one: 'one',
  many: 'many',
} as const;

/**
 * Type of relationship between objects.
 */
export type RelationType = typeof RelationType[keyof typeof RelationType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RelationType = {
  parent: 'parent',
  child: 'child',
} as const;

export interface RemoveMediaFromDeliverableAction {
  data: RemoveMediaFromDeliverableSchema;
  action: 'deliverable_actions__deliverable_remove_media';
}

export interface RemoveMediaFromDeliverableSchema {
  media_ids: unknown[];
}

/**
 * Role levels for team membership.
 */
export type RoleLevel = typeof RoleLevel[keyof typeof RoleLevel];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const RoleLevel = {
  owner: 'owner',
  admin: 'admin',
  member: 'member',
  viewer: 'viewer',
} as const;

export type RosterCreateSchemaEmail = string | null;

export type RosterCreateSchemaPhone = string | null;

export type RosterCreateSchemaInstagramHandle = string | null;

export interface RosterCreateSchema {
  name: string;
  email?: RosterCreateSchemaEmail;
  phone?: RosterCreateSchemaPhone;
  instagram_handle?: RosterCreateSchemaInstagramHandle;
}

export type RosterInDeliverableSchemaEmail = string | null;

export type RosterInDeliverableSchemaInstagramHandle = string | null;

export type RosterInDeliverableSchemaFacebookHandle = string | null;

export type RosterInDeliverableSchemaTiktokHandle = string | null;

export type RosterInDeliverableSchemaYoutubeChannel = string | null;

export interface RosterInDeliverableSchema {
  id: unknown;
  name: string;
  email?: RosterInDeliverableSchemaEmail;
  instagram_handle?: RosterInDeliverableSchemaInstagramHandle;
  facebook_handle?: RosterInDeliverableSchemaFacebookHandle;
  tiktok_handle?: RosterInDeliverableSchemaTiktokHandle;
  youtube_channel?: RosterInDeliverableSchemaYoutubeChannel;
  state: string;
}

export type RosterSchemaEmail = string | null;

export type RosterSchemaPhone = string | null;

export type RosterSchemaBirthdate = string | null;

export type RosterSchemaInstagramHandle = string | null;

export type RosterSchemaFacebookHandle = string | null;

export type RosterSchemaTiktokHandle = string | null;

export type RosterSchemaYoutubeChannel = string | null;

export type RosterSchemaProfilePhotoId = number | null;

export type RosterSchemaTeamId = number | null;

export interface RosterSchema {
  id: unknown;
  name: string;
  email?: RosterSchemaEmail;
  phone?: RosterSchemaPhone;
  birthdate?: RosterSchemaBirthdate;
  instagram_handle?: RosterSchemaInstagramHandle;
  facebook_handle?: RosterSchemaFacebookHandle;
  tiktok_handle?: RosterSchemaTiktokHandle;
  youtube_channel?: RosterSchemaYoutubeChannel;
  profile_photo_id?: RosterSchemaProfilePhotoId;
  state: string;
  created_at: string;
  updated_at: string;
  team_id?: RosterSchemaTeamId;
  actions: ActionDTO[];
}

export type RosterUpdateSchemaName = string | null;

export type RosterUpdateSchemaEmail = string | null;

export type RosterUpdateSchemaPhone = string | null;

export type RosterUpdateSchemaBirthdate = string | null;

export type RosterUpdateSchemaInstagramHandle = string | null;

export type RosterUpdateSchemaFacebookHandle = string | null;

export type RosterUpdateSchemaTiktokHandle = string | null;

export type RosterUpdateSchemaYoutubeChannel = string | null;

export interface RosterUpdateSchema {
  name?: RosterUpdateSchemaName;
  email?: RosterUpdateSchemaEmail;
  phone?: RosterUpdateSchemaPhone;
  birthdate?: RosterUpdateSchemaBirthdate;
  instagram_handle?: RosterUpdateSchemaInstagramHandle;
  facebook_handle?: RosterUpdateSchemaFacebookHandle;
  tiktok_handle?: RosterUpdateSchemaTiktokHandle;
  youtube_channel?: RosterUpdateSchemaYoutubeChannel;
}

/**
 * Scope type for user access control.

Users can have either team scope OR campaign scope active at a time.
- TEAM: Full access to all team resources
- CAMPAIGN: Limited access to specific campaign resources

 */
export type ScopeType = typeof ScopeType[keyof typeof ScopeType];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const ScopeType = {
  team: 'team',
  campaign: 'campaign',
} as const;

export type SocialMediaPlatforms = typeof SocialMediaPlatforms[keyof typeof SocialMediaPlatforms];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SocialMediaPlatforms = {
  instagram: 'instagram',
  facebook: 'facebook',
  tiktok: 'tiktok',
  youtube: 'youtube',
} as const;

export interface SortDefinition {
  column: string;
  direction: SortDirection;
}

/**
 * Sort direction options.
 */
export type SortDirection = typeof SortDirection[keyof typeof SortDirection];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const SortDirection = {
  sort_asc: 'sort_asc',
  sort_desc: 'sort_desc',
} as const;

export interface StringFieldValue {
  value: string;
  type: 'string';
}

export interface SwitchScopeRequest {
  scope_type: ScopeType;
  scope_id: number;
}

export interface SwitchTeamRequest {
  team_id: number;
}

export interface TeamListItemSchema {
  team_id: number;
  public_id: string;
  team_name: string;
  role_level: RoleLevel;
  actions?: ActionDTO[];
}

export type TeamSchemaDescription = string | null;

export interface TeamSchema {
  id: unknown;
  name: string;
  description?: TeamSchemaDescription;
  created_at: string;
  updated_at: string;
}

export interface TeamScopeSchema {
  team_id: number;
  team_name: string;
  role_level: RoleLevel;
}

export type TextFieldValueValue = { [key: string]: unknown };

export interface TextFieldValue {
  value: TextFieldValueValue;
  type: 'text';
}

export type TextFilterDefinitionOperation = typeof TextFilterDefinitionOperation[keyof typeof TextFilterDefinitionOperation];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TextFilterDefinitionOperation = {
  contains: 'contains',
  starts_with: 'starts_with',
  ends_with: 'ends_with',
  equals: 'equals',
} as const;

export interface TextFilterDefinition {
  column: string;
  operation: TextFilterDefinitionOperation;
  value: string;
  type: 'text_filter';
}

export interface ThreadUnreadInfo {
  thread_id: unknown;
  unread_count: number;
}

/**
 * Relative time range options for time series queries.
 */
export type TimeRange = typeof TimeRange[keyof typeof TimeRange];


// eslint-disable-next-line @typescript-eslint/no-redeclare
export const TimeRange = {
  last_7_days: 'last_7_days',
  last_30_days: 'last_30_days',
  last_90_days: 'last_90_days',
  last_6_months: 'last_6_months',
  last_year: 'last_year',
  year_to_date: 'year_to_date',
  month_to_date: 'month_to_date',
  all_time: 'all_time',
} as const;

export type TimeSeriesDataRequestTimeRange = TimeRange | null;

export type TimeSeriesDataRequestStartDate = string | null;

export type TimeSeriesDataRequestEndDate = string | null;

export type TimeSeriesDataRequestAggregation = AggregationType | null;

export type TimeSeriesDataRequestFiltersItem = TextFilterDefinition | RangeFilterDefinition | DateFilterDefinition | BooleanFilterDefinition | EnumFilterDefinition;

export interface TimeSeriesDataRequest {
  field: string;
  time_range?: TimeSeriesDataRequestTimeRange;
  start_date?: TimeSeriesDataRequestStartDate;
  end_date?: TimeSeriesDataRequestEndDate;
  granularity?: Granularity;
  aggregation?: TimeSeriesDataRequestAggregation;
  filters?: TimeSeriesDataRequestFiltersItem[];
  fill_missing?: boolean;
}

export type TimeSeriesDataResponseData = NumericalTimeSeriesData | CategoricalTimeSeriesData;

export interface TimeSeriesDataResponse {
  data: TimeSeriesDataResponseData;
  field_name: string;
  field_type: FieldType;
  aggregation_type: AggregationType;
  granularity_used: Granularity;
  start_date: string;
  end_date: string;
  total_records: number;
}

export interface URLFieldValue {
  value: string;
  type: 'url';
}

export interface USDFieldValue {
  value: number;
  type: 'usd';
}

export interface UpdateBrandAction {
  data: BrandUpdateSchema;
  action: 'brand_actions__brand_update';
}

export interface UpdateCampaignAction {
  data: CampaignUpdateSchema;
  action: 'campaign_actions__campaign_update';
}

export interface UpdateDashboardAction {
  data: UpdateDashboardSchema;
  action: 'dashboard_actions__update';
}

export type UpdateDashboardSchemaName = string | null;

export type UpdateDashboardSchemaConfigOneOf = {[key: string]: unknown};

export type UpdateDashboardSchemaConfig = UpdateDashboardSchemaConfigOneOf | null;

export type UpdateDashboardSchemaIsDefault = boolean | null;

export interface UpdateDashboardSchema {
  name?: UpdateDashboardSchemaName;
  config?: UpdateDashboardSchemaConfig;
  is_default?: UpdateDashboardSchemaIsDefault;
}

export interface UpdateInvoiceAction {
  data: InvoiceUpdateSchema;
  action: 'invoice_actions__invoice_update';
}

export interface UpdateMediaAction {
  data: MediaUpdateSchema;
  action: 'media_actions__media_update';
}

export interface UpdateMessageAction {
  data: MessageUpdateSchema;
  action: 'message_actions__update';
}

export interface UpdateRosterAction {
  data: RosterUpdateSchema;
  action: 'roster_actions__roster_update';
}

export type UserWaitlistFormSchemaCompany = string | null;

export type UserWaitlistFormSchemaMessage = string | null;

export interface UserWaitlistFormSchema {
  name: string;
  email: string;
  company?: UserWaitlistFormSchemaCompany;
  message?: UserWaitlistFormSchemaMessage;
}

export type WaitlistEntrySchemaCompany = string | null;

export type WaitlistEntrySchemaMessage = string | null;

export interface WaitlistEntrySchema {
  id: unknown;
  name: string;
  email: string;
  company?: WaitlistEntrySchemaCompany;
  message?: WaitlistEntrySchemaMessage;
  created_at: string;
  updated_at: string;
}

export interface ThreadsSchemasUserSchema {
  id: unknown;
  email: string;
  name: string;
}

export interface UsersSchemasUserSchema {
  id: unknown;
  name: string;
  email: string;
  email_verified: boolean;
  state: string;
  created_at: string;
  updated_at: string;
}

export type HealthHealthCheck200 = { [key: string]: unknown };

export type UsersSignupAddUserToWaitlist400ExtraAnyOf = {[key: string]: unknown};

export type UsersSignupAddUserToWaitlist400Extra = null | UsersSignupAddUserToWaitlist400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type UsersSignupAddUserToWaitlist400 = {
  status_code: number;
  detail: string;
  extra?: UsersSignupAddUserToWaitlist400Extra;
};

export type UsersCreateUser400ExtraAnyOf = {[key: string]: unknown};

export type UsersCreateUser400Extra = null | UsersCreateUser400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type UsersCreateUser400 = {
  status_code: number;
  detail: string;
  extra?: UsersCreateUser400Extra;
};

export type UsersUserIdGetUser400ExtraAnyOf = {[key: string]: unknown};

export type UsersUserIdGetUser400Extra = null | UsersUserIdGetUser400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type UsersUserIdGetUser400 = {
  status_code: number;
  detail: string;
  extra?: UsersUserIdGetUser400Extra;
};

export type UsersTeamsCreateTeam400ExtraAnyOf = {[key: string]: unknown};

export type UsersTeamsCreateTeam400Extra = null | UsersTeamsCreateTeam400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type UsersTeamsCreateTeam400 = {
  status_code: number;
  detail: string;
  extra?: UsersTeamsCreateTeam400Extra;
};

export type UsersSwitchTeamSwitchTeam201 = { [key: string]: unknown };

export type UsersSwitchTeamSwitchTeam400ExtraAnyOf = {[key: string]: unknown};

export type UsersSwitchTeamSwitchTeam400Extra = null | UsersSwitchTeamSwitchTeam400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type UsersSwitchTeamSwitchTeam400 = {
  status_code: number;
  detail: string;
  extra?: UsersSwitchTeamSwitchTeam400Extra;
};

export type RosterIdGetRoster400ExtraAnyOf = {[key: string]: unknown};

export type RosterIdGetRoster400Extra = null | RosterIdGetRoster400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type RosterIdGetRoster400 = {
  status_code: number;
  detail: string;
  extra?: RosterIdGetRoster400Extra;
};

export type RosterIdUpdateRoster400ExtraAnyOf = {[key: string]: unknown};

export type RosterIdUpdateRoster400Extra = null | RosterIdUpdateRoster400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type RosterIdUpdateRoster400 = {
  status_code: number;
  detail: string;
  extra?: RosterIdUpdateRoster400Extra;
};

export type AuthSwitchScopeSwitchScope201 = { [key: string]: unknown };

export type AuthSwitchScopeSwitchScope400ExtraAnyOf = {[key: string]: unknown};

export type AuthSwitchScopeSwitchScope400Extra = null | AuthSwitchScopeSwitchScope400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type AuthSwitchScopeSwitchScope400 = {
  status_code: number;
  detail: string;
  extra?: AuthSwitchScopeSwitchScope400Extra;
};

export type AuthGoogleLoginGoogleLogin200 = { [key: string]: unknown };

export type AuthGoogleCallbackGoogleCallbackParams = {
code?: string | null;
state?: string | null;
error?: string | null;
};

export type AuthGoogleCallbackGoogleCallback200 = { [key: string]: unknown };

export type AuthGoogleCallbackGoogleCallback400ExtraAnyOf = {[key: string]: unknown};

export type AuthGoogleCallbackGoogleCallback400Extra = null | AuthGoogleCallbackGoogleCallback400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type AuthGoogleCallbackGoogleCallback400 = {
  status_code: number;
  detail: string;
  extra?: AuthGoogleCallbackGoogleCallback400Extra;
};

export type OObjectTypeIdGetObjectDetail400ExtraAnyOf = {[key: string]: unknown};

export type OObjectTypeIdGetObjectDetail400Extra = null | OObjectTypeIdGetObjectDetail400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type OObjectTypeIdGetObjectDetail400 = {
  status_code: number;
  detail: string;
  extra?: OObjectTypeIdGetObjectDetail400Extra;
};

export type OObjectTypeSchemaGetObjectSchema400ExtraAnyOf = {[key: string]: unknown};

export type OObjectTypeSchemaGetObjectSchema400Extra = null | OObjectTypeSchemaGetObjectSchema400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type OObjectTypeSchemaGetObjectSchema400 = {
  status_code: number;
  detail: string;
  extra?: OObjectTypeSchemaGetObjectSchema400Extra;
};

export type ListObjects400ExtraAnyOf = {[key: string]: unknown};

export type ListObjects400Extra = null | ListObjects400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ListObjects400 = {
  status_code: number;
  detail: string;
  extra?: ListObjects400Extra;
};

export type GetTimeSeriesData400ExtraAnyOf = {[key: string]: unknown};

export type GetTimeSeriesData400Extra = null | GetTimeSeriesData400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type GetTimeSeriesData400 = {
  status_code: number;
  detail: string;
  extra?: GetTimeSeriesData400Extra;
};

export type ActionsActionGroupListActions400ExtraAnyOf = {[key: string]: unknown};

export type ActionsActionGroupListActions400Extra = null | ActionsActionGroupListActions400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ActionsActionGroupListActions400 = {
  status_code: number;
  detail: string;
  extra?: ActionsActionGroupListActions400Extra;
};

export type ActionsActionGroupExecuteActionBody = DeleteInvoiceAction | UpdateInvoiceAction | DeleteRosterAction | UpdateRosterAction | DeleteBrandAction | UpdateBrandAction | DeleteDashboardAction | UpdateDashboardAction | DeleteDeliverableAction | EditDeliverableAction | PublishDeliverableAction | AddMediaToDeliverableAction | RemoveMediaFromDeliverableAction | UpdateMessageAction | DeleteMessageAction | DeleteTeamAction | DeleteCampaignAction | UpdateCampaignAction | DeleteMediaAction | UpdateMediaAction | DownloadMediaAction | CreateInvoiceAction | CreateRosterAction | CreateBrandAction | CreateDeliverableAction | CreateCampaignAction | CreateMediaAction;

export type ActionsActionGroupExecuteAction400ExtraAnyOf = {[key: string]: unknown};

export type ActionsActionGroupExecuteAction400Extra = null | ActionsActionGroupExecuteAction400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ActionsActionGroupExecuteAction400 = {
  status_code: number;
  detail: string;
  extra?: ActionsActionGroupExecuteAction400Extra;
};

export type ActionsActionGroupObjectIdListObjectActions400ExtraAnyOf = {[key: string]: unknown};

export type ActionsActionGroupObjectIdListObjectActions400Extra = null | ActionsActionGroupObjectIdListObjectActions400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ActionsActionGroupObjectIdListObjectActions400 = {
  status_code: number;
  detail: string;
  extra?: ActionsActionGroupObjectIdListObjectActions400Extra;
};

export type ActionsActionGroupObjectIdExecuteObjectActionBody = DeleteInvoiceAction | UpdateInvoiceAction | DeleteRosterAction | UpdateRosterAction | DeleteBrandAction | UpdateBrandAction | DeleteDashboardAction | UpdateDashboardAction | DeleteDeliverableAction | EditDeliverableAction | PublishDeliverableAction | AddMediaToDeliverableAction | RemoveMediaFromDeliverableAction | UpdateMessageAction | DeleteMessageAction | DeleteTeamAction | DeleteCampaignAction | UpdateCampaignAction | DeleteMediaAction | UpdateMediaAction | DownloadMediaAction | CreateInvoiceAction | CreateRosterAction | CreateBrandAction | CreateDeliverableAction | CreateCampaignAction | CreateMediaAction;

export type ActionsActionGroupObjectIdExecuteObjectAction400ExtraAnyOf = {[key: string]: unknown};

export type ActionsActionGroupObjectIdExecuteObjectAction400Extra = null | ActionsActionGroupObjectIdExecuteObjectAction400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ActionsActionGroupObjectIdExecuteObjectAction400 = {
  status_code: number;
  detail: string;
  extra?: ActionsActionGroupObjectIdExecuteObjectAction400Extra;
};

export type BrandsIdGetBrand400ExtraAnyOf = {[key: string]: unknown};

export type BrandsIdGetBrand400Extra = null | BrandsIdGetBrand400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type BrandsIdGetBrand400 = {
  status_code: number;
  detail: string;
  extra?: BrandsIdGetBrand400Extra;
};

export type BrandsIdUpdateBrand400ExtraAnyOf = {[key: string]: unknown};

export type BrandsIdUpdateBrand400Extra = null | BrandsIdUpdateBrand400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type BrandsIdUpdateBrand400 = {
  status_code: number;
  detail: string;
  extra?: BrandsIdUpdateBrand400Extra;
};

export type BrandsContactsIdGetBrandContact400ExtraAnyOf = {[key: string]: unknown};

export type BrandsContactsIdGetBrandContact400Extra = null | BrandsContactsIdGetBrandContact400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type BrandsContactsIdGetBrandContact400 = {
  status_code: number;
  detail: string;
  extra?: BrandsContactsIdGetBrandContact400Extra;
};

export type BrandsContactsIdUpdateBrandContact400ExtraAnyOf = {[key: string]: unknown};

export type BrandsContactsIdUpdateBrandContact400Extra = null | BrandsContactsIdUpdateBrandContact400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type BrandsContactsIdUpdateBrandContact400 = {
  status_code: number;
  detail: string;
  extra?: BrandsContactsIdUpdateBrandContact400Extra;
};

export type CampaignsIdGetCampaign400ExtraAnyOf = {[key: string]: unknown};

export type CampaignsIdGetCampaign400Extra = null | CampaignsIdGetCampaign400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type CampaignsIdGetCampaign400 = {
  status_code: number;
  detail: string;
  extra?: CampaignsIdGetCampaign400Extra;
};

export type CampaignsIdUpdateCampaign400ExtraAnyOf = {[key: string]: unknown};

export type CampaignsIdUpdateCampaign400Extra = null | CampaignsIdUpdateCampaign400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type CampaignsIdUpdateCampaign400 = {
  status_code: number;
  detail: string;
  extra?: CampaignsIdUpdateCampaign400Extra;
};

export type DeliverablesIdGetDeliverable400ExtraAnyOf = {[key: string]: unknown};

export type DeliverablesIdGetDeliverable400Extra = null | DeliverablesIdGetDeliverable400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type DeliverablesIdGetDeliverable400 = {
  status_code: number;
  detail: string;
  extra?: DeliverablesIdGetDeliverable400Extra;
};

export type DeliverablesIdUpdateDeliverable400ExtraAnyOf = {[key: string]: unknown};

export type DeliverablesIdUpdateDeliverable400Extra = null | DeliverablesIdUpdateDeliverable400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type DeliverablesIdUpdateDeliverable400 = {
  status_code: number;
  detail: string;
  extra?: DeliverablesIdUpdateDeliverable400Extra;
};

export type MediaPresignedUploadRequestPresignedUpload400ExtraAnyOf = {[key: string]: unknown};

export type MediaPresignedUploadRequestPresignedUpload400Extra = null | MediaPresignedUploadRequestPresignedUpload400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type MediaPresignedUploadRequestPresignedUpload400 = {
  status_code: number;
  detail: string;
  extra?: MediaPresignedUploadRequestPresignedUpload400Extra;
};

export type MediaRegisterRegisterMedia400ExtraAnyOf = {[key: string]: unknown};

export type MediaRegisterRegisterMedia400Extra = null | MediaRegisterRegisterMedia400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type MediaRegisterRegisterMedia400 = {
  status_code: number;
  detail: string;
  extra?: MediaRegisterRegisterMedia400Extra;
};

export type MediaIdGetMedia400ExtraAnyOf = {[key: string]: unknown};

export type MediaIdGetMedia400Extra = null | MediaIdGetMedia400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type MediaIdGetMedia400 = {
  status_code: number;
  detail: string;
  extra?: MediaIdGetMedia400Extra;
};

export type MediaIdDeleteMedia200 = {[key: string]: string};

export type MediaIdDeleteMedia400ExtraAnyOf = {[key: string]: unknown};

export type MediaIdDeleteMedia400Extra = null | MediaIdDeleteMedia400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type MediaIdDeleteMedia400 = {
  status_code: number;
  detail: string;
  extra?: MediaIdDeleteMedia400Extra;
};

export type InvoicesIdGetInvoice400ExtraAnyOf = {[key: string]: unknown};

export type InvoicesIdGetInvoice400Extra = null | InvoicesIdGetInvoice400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type InvoicesIdGetInvoice400 = {
  status_code: number;
  detail: string;
  extra?: InvoicesIdGetInvoice400Extra;
};

export type InvoicesIdUpdateInvoice400ExtraAnyOf = {[key: string]: unknown};

export type InvoicesIdUpdateInvoice400Extra = null | InvoicesIdUpdateInvoice400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type InvoicesIdUpdateInvoice400 = {
  status_code: number;
  detail: string;
  extra?: InvoicesIdUpdateInvoice400Extra;
};

export type DashboardsCreateDashboard400ExtraAnyOf = {[key: string]: unknown};

export type DashboardsCreateDashboard400Extra = null | DashboardsCreateDashboard400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type DashboardsCreateDashboard400 = {
  status_code: number;
  detail: string;
  extra?: DashboardsCreateDashboard400Extra;
};

export type DashboardsIdGetDashboard400ExtraAnyOf = {[key: string]: unknown};

export type DashboardsIdGetDashboard400Extra = null | DashboardsIdGetDashboard400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type DashboardsIdGetDashboard400 = {
  status_code: number;
  detail: string;
  extra?: DashboardsIdGetDashboard400Extra;
};

export type DashboardsIdUpdateDashboard400ExtraAnyOf = {[key: string]: unknown};

export type DashboardsIdUpdateDashboard400Extra = null | DashboardsIdUpdateDashboard400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type DashboardsIdUpdateDashboard400 = {
  status_code: number;
  detail: string;
  extra?: DashboardsIdUpdateDashboard400Extra;
};

export type ThreadsThreadableTypeThreadableIdMessagesListMessagesParams = {
offset?: number;
/**
 * @minimum 1
 * @maximum 100
 */
limit?: number;
};

export type ThreadsThreadableTypeThreadableIdMessagesListMessages400ExtraAnyOf = {[key: string]: unknown};

export type ThreadsThreadableTypeThreadableIdMessagesListMessages400Extra = null | ThreadsThreadableTypeThreadableIdMessagesListMessages400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ThreadsThreadableTypeThreadableIdMessagesListMessages400 = {
  status_code: number;
  detail: string;
  extra?: ThreadsThreadableTypeThreadableIdMessagesListMessages400Extra;
};

export type ThreadsThreadableTypeThreadableIdMessagesCreateMessageParams = {
user_id: number;
};

export type ThreadsThreadableTypeThreadableIdMessagesCreateMessage400ExtraAnyOf = {[key: string]: unknown};

export type ThreadsThreadableTypeThreadableIdMessagesCreateMessage400Extra = null | ThreadsThreadableTypeThreadableIdMessagesCreateMessage400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ThreadsThreadableTypeThreadableIdMessagesCreateMessage400 = {
  status_code: number;
  detail: string;
  extra?: ThreadsThreadableTypeThreadableIdMessagesCreateMessage400Extra;
};

export type ThreadsThreadableTypeBatchUnreadGetBatchThreadUnreadParams = {
user_id: number;
};

export type ThreadsThreadableTypeBatchUnreadGetBatchThreadUnread400ExtraAnyOf = {[key: string]: unknown};

export type ThreadsThreadableTypeBatchUnreadGetBatchThreadUnread400Extra = null | ThreadsThreadableTypeBatchUnreadGetBatchThreadUnread400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ThreadsThreadableTypeBatchUnreadGetBatchThreadUnread400 = {
  status_code: number;
  detail: string;
  extra?: ThreadsThreadableTypeBatchUnreadGetBatchThreadUnread400Extra;
};

export type ThreadsThreadableTypeThreadableIdMarkReadMarkThreadReadParams = {
user_id: number;
};

export type ThreadsThreadableTypeThreadableIdMarkReadMarkThreadRead400ExtraAnyOf = {[key: string]: unknown};

export type ThreadsThreadableTypeThreadableIdMarkReadMarkThreadRead400Extra = null | ThreadsThreadableTypeThreadableIdMarkReadMarkThreadRead400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type ThreadsThreadableTypeThreadableIdMarkReadMarkThreadRead400 = {
  status_code: number;
  detail: string;
  extra?: ThreadsThreadableTypeThreadableIdMarkReadMarkThreadRead400Extra;
};

export type LocalUploadKeyLocalUpload200 = { [key: string]: unknown };

export type LocalUploadKeyLocalUpload400ExtraAnyOf = {[key: string]: unknown};

export type LocalUploadKeyLocalUpload400Extra = null | LocalUploadKeyLocalUpload400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type LocalUploadKeyLocalUpload400 = {
  status_code: number;
  detail: string;
  extra?: LocalUploadKeyLocalUpload400Extra;
};

export type LocalDownloadKeyLocalDownload200 = { [key: string]: unknown };

export type LocalDownloadKeyLocalDownload400ExtraAnyOf = {[key: string]: unknown};

export type LocalDownloadKeyLocalDownload400Extra = null | LocalDownloadKeyLocalDownload400ExtraAnyOf | unknown[];

/**
 * Validation Exception
 */
export type LocalDownloadKeyLocalDownload400 = {
  status_code: number;
  detail: string;
  extra?: LocalDownloadKeyLocalDownload400Extra;
};

