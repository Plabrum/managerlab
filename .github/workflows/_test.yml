name: Test Backend (Reusable)

on:
  workflow_call:

jobs:
  test:
    name: Test Backend
    runs-on: ubuntu-latest

    services:
      postgres:
        image: public.ecr.aws/docker/library/postgres:17.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: manageros_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.docker-cache
          key: ${{ runner.os }}-docker-postgres-17.5
          restore-keys: |
            ${{ runner.os }}-docker-postgres-

      - name: Load Docker cache
        run: |
          if [ -f /tmp/.docker-cache/postgres-17.5.tar ]; then
            echo "Loading PostgreSQL image from cache..."
            docker load < /tmp/.docker-cache/postgres-17.5.tar
          else
            echo "Pulling PostgreSQL image and saving to cache..."
            docker pull public.ecr.aws/docker/library/postgres:17.5
            mkdir -p /tmp/.docker-cache
            docker save public.ecr.aws/docker/library/postgres:17.5 > /tmp/.docker-cache/postgres-17.5.tar
          fi

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install uv
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true
          cache-dependency-glob: "backend/**/uv.lock"

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            backend/.venv
          key: ${{ runner.os }}-uv-${{ hashFiles('backend/uv.lock', 'backend/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Install dependencies
        run: |
          cd backend
          uv sync --dev

      - name: Run type checking
        run: |
          cd backend
          uv run basedpyright

      - name: Run tests
        env:
          PGHOST: localhost
          PGUSER: postgres
          PGPASSWORD: postgres
          PGDATABASE: manageros_test
          PGPORT: 5432
        run: |
          cd backend
          uv run pytest -v
