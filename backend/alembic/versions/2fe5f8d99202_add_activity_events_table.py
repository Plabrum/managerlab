"""add activity events table

Revision ID: 2fe5f8d99202
Revises: baa8f83b7f5a
Create Date: 2025-10-24 10:19:43.304372

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from app.utils.sqids import SqidType

# revision identifiers, used by Alembic.
revision: str = "2fe5f8d99202"
down_revision: Union[str, Sequence[str], None] = "baa8f83b7f5a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "activity_events",
        sa.Column("actor_id", SqidType(), nullable=False),
        sa.Column("object_type", sa.String(length=50), nullable=False),
        sa.Column("object_id", sa.Integer(), nullable=False),
        sa.Column(
            "event_type",
            sa.Enum(
                "CREATED",
                "UPDATED",
                "DELETED",
                "STATE_CHANGED",
                "CUSTOM",
                name="eventtype",
            ),
            nullable=False,
        ),
        sa.Column("message", sa.Text(), nullable=False),
        sa.Column("changes", postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column(
            "extra_metadata", postgresql.JSONB(astext_type=sa.Text()), nullable=True
        ),
        sa.Column("team_id", SqidType(), nullable=False),
        sa.Column("id", SqidType(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["actor_id"],
            ["users.id"],
        ),
        sa.ForeignKeyConstraint(["team_id"], ["teams.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "ix_activity_events_actor",
        "activity_events",
        ["actor_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_activity_events_actor_id"),
        "activity_events",
        ["actor_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_activity_events_deleted_at"),
        "activity_events",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(
        "ix_activity_events_team_created",
        "activity_events",
        ["team_id", "created_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_activity_events_team_id"), "activity_events", ["team_id"], unique=False
    )
    op.create_index(
        "ix_activity_events_team_object",
        "activity_events",
        ["team_id", "object_type", "object_id", "created_at"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_activity_events_team_object", table_name="activity_events")
    op.drop_index(op.f("ix_activity_events_team_id"), table_name="activity_events")
    op.drop_index("ix_activity_events_team_created", table_name="activity_events")
    op.drop_index(op.f("ix_activity_events_deleted_at"), table_name="activity_events")
    op.drop_index(op.f("ix_activity_events_actor_id"), table_name="activity_events")
    op.drop_index("ix_activity_events_actor", table_name="activity_events")
    op.drop_table("activity_events")
    # ### end Alembic commands ###
