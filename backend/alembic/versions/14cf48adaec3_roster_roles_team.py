"""Roster Roles Team

Revision ID: 14cf48adaec3
Revises: 82cd4683f530
Create Date: 2025-09-30 12:46:04.137865

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "14cf48adaec3"
down_revision: str | Sequence[str] | None = "82cd4683f530"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "roles",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("team_id", sa.Integer(), nullable=False),
        sa.Column(
            "role_level",
            sa.Enum(
                "OWNER",
                "ADMIN",
                "MEMBER",
                "VIEWER",
                name="rolelevel",
                native_enum=False,
                length=50,
            ),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["team_id"], ["teams.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "team_id", name="uq_user_team"),
    )
    op.create_index(op.f("ix_roles_team_id"), "roles", ["team_id"], unique=False)
    op.create_index(op.f("ix_roles_user_id"), "roles", ["user_id"], unique=False)
    op.create_table(
        "roster",
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("email", sa.Text(), nullable=True),
        sa.Column("phone", sa.Text(), nullable=True),
        sa.Column("instagram_handle", sa.Text(), nullable=True),
        sa.Column("state", sa.Text(), server_default="PROSPECT", nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_roster_email"), "roster", ["email"], unique=False)
    op.create_index(op.f("ix_roster_instagram_handle"), "roster", ["instagram_handle"], unique=False)
    op.create_index(op.f("ix_roster_name"), "roster", ["name"], unique=False)
    op.create_index(op.f("ix_roster_state"), "roster", ["state"], unique=False)
    op.create_index(op.f("ix_roster_user_id"), "roster", ["user_id"], unique=False)
    op.create_index(op.f("ix_teams_name"), "teams", ["name"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_teams_name"), table_name="teams")
    op.drop_index(op.f("ix_roster_user_id"), table_name="roster")
    op.drop_index(op.f("ix_roster_state"), table_name="roster")
    op.drop_index(op.f("ix_roster_name"), table_name="roster")
    op.drop_index(op.f("ix_roster_instagram_handle"), table_name="roster")
    op.drop_index(op.f("ix_roster_email"), table_name="roster")
    op.drop_table("roster")
    op.drop_index(op.f("ix_roles_user_id"), table_name="roles")
    op.drop_index(op.f("ix_roles_team_id"), table_name="roles")
    op.drop_table("roles")
    # ### end Alembic commands ###
