"""brand fields

Revision ID: 717e518ffc3a
Revises: 521dafcba94d
Create Date: 2025-10-22 18:17:01.786806

"""

from typing import Sequence, Union

from alembic import op
from alembic_utils.pg_policy import PGPolicy

# revision identifiers, used by Alembic.
revision: str = "717e518ffc3a"
down_revision: Union[str, Sequence[str], None] = "521dafcba94d"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    public_threads_team_scope_policy = PGPolicy(
        schema="public",
        signature="team_scope_policy",
        on_entity="public.threads",
        definition="AS PERMISSIVE\n                            FOR ALL\n                            USING (\n                                team_id = current_setting('app.team_id', true)::int\n                                OR current_setting('app.team_id', true) IS NULL\n                            )",
    )
    op.create_entity(public_threads_team_scope_policy)

    public_messages_dual_scope_policy = PGPolicy(
        schema="public",
        signature="dual_scope_policy",
        on_entity="public.messages",
        definition="AS PERMISSIVE\n                            FOR ALL\n                            USING (\n                                (team_id = current_setting('app.team_id', true)::int)\n                                OR (campaign_id = current_setting('app.campaign_id', true)::int)\n                                OR (current_setting('app.team_id', true) IS NULL\n                                    AND current_setting('app.campaign_id', true) IS NULL)\n                            )",
    )
    op.create_entity(public_messages_dual_scope_policy)

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    public_messages_dual_scope_policy = PGPolicy(
        schema="public",
        signature="dual_scope_policy",
        on_entity="public.messages",
        definition="AS PERMISSIVE\n                            FOR ALL\n                            USING (\n                                (team_id = current_setting('app.team_id', true)::int)\n                                OR (campaign_id = current_setting('app.campaign_id', true)::int)\n                                OR (current_setting('app.team_id', true) IS NULL\n                                    AND current_setting('app.campaign_id', true) IS NULL)\n                            )",
    )
    op.drop_entity(public_messages_dual_scope_policy)

    public_threads_team_scope_policy = PGPolicy(
        schema="public",
        signature="team_scope_policy",
        on_entity="public.threads",
        definition="AS PERMISSIVE\n                            FOR ALL\n                            USING (\n                                team_id = current_setting('app.team_id', true)::int\n                                OR current_setting('app.team_id', true) IS NULL\n                            )",
    )
    op.drop_entity(public_threads_team_scope_policy)

    # ### end Alembic commands ###
