"""Auto-generated migration

Revision ID: e4595de2a5b8
Revises: 80e1fa2d780f
Create Date: 2025-09-19 12:23:11.645716

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e4595de2a5b8"
down_revision: Union[str, Sequence[str], None] = "80e1fa2d780f"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "waitlist_entries",
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("email", sa.Text(), nullable=False),
        sa.Column("company", sa.Text(), nullable=True),
        sa.Column("message", sa.Text(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_waitlist_entries_email"), "waitlist_entries", ["email"], unique=False
    )
    op.create_index(
        op.f("ix_waitlist_entries_name"), "waitlist_entries", ["name"], unique=False
    )
    op.add_column("users", sa.Column("email_verified", sa.Boolean(), nullable=False))
    op.alter_column(
        "users",
        "name",
        existing_type=sa.VARCHAR(length=255),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "email",
        existing_type=sa.VARCHAR(length=255),
        type_=sa.Text(),
        existing_nullable=False,
    )
    op.drop_constraint(op.f("users_email_key"), "users", type_="unique")
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_name"), "users", ["name"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_users_name"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.create_unique_constraint(
        op.f("users_email_key"), "users", ["email"], postgresql_nulls_not_distinct=False
    )
    op.alter_column(
        "users",
        "email",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False,
    )
    op.alter_column(
        "users",
        "name",
        existing_type=sa.Text(),
        type_=sa.VARCHAR(length=255),
        existing_nullable=False,
    )
    op.drop_column("users", "email_verified")
    op.drop_index(op.f("ix_waitlist_entries_name"), table_name="waitlist_entries")
    op.drop_index(op.f("ix_waitlist_entries_email"), table_name="waitlist_entries")
    op.drop_table("waitlist_entries")
    # ### end Alembic commands ###
