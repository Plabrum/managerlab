"""add campaign and deliverable enhancements with payment blocks

Revision ID: 1991909290ec
Revises: 717e518ffc3a
Create Date: 2025-10-23 21:45:59.159978

"""

from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

import app.utils.sqids
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "1991909290ec"
down_revision: str | Sequence[str] | None = "717e518ffc3a"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create new enum types
    counterpartytype = sa.Enum("AGENCY", "BRAND", name="counterpartytype")
    counterpartytype.create(op.get_bind(), checkfirst=True)

    ownershipmode = sa.Enum("BRAND_OWNED", "CREATOR_OWNED", "SHARED", name="ownershipmode")
    ownershipmode.create(op.get_bind(), checkfirst=True)

    deliverabletype = sa.Enum(
        "INSTAGRAM_FEED_POST",
        "INSTAGRAM_STORY_FRAME",
        "INSTAGRAM_REEL",
        "INSTAGRAM_CAROUSEL",
        "TIKTOK_VIDEO",
        "TIKTOK_PHOTO_POST",
        "YOUTUBE_VIDEO",
        "YOUTUBE_SHORT",
        "YOUTUBE_COMMUNITY_POST",
        "FACEBOOK_POST",
        "FACEBOOK_STORY",
        "FACEBOOK_REEL",
        "BLOG_POST",
        "PODCAST_EPISODE",
        "EMAIL_NEWSLETTER",
        name="deliverabletype",
    )
    deliverabletype.create(op.get_bind(), checkfirst=True)

    op.create_table(
        "payment_blocks",
        sa.Column("campaign_id", app.utils.sqids.SqidType(), nullable=False),
        sa.Column("label", sa.String(length=128), nullable=True),
        sa.Column("trigger", sa.String(length=512), nullable=True),
        sa.Column("amount_usd", sa.Numeric(precision=10, scale=2), nullable=True),
        sa.Column("percent", sa.Numeric(precision=5, scale=2), nullable=True),
        sa.Column("net_days", sa.Integer(), nullable=True),
        sa.Column("order_index", sa.Integer(), nullable=False),
        sa.Column("team_id", app.utils.sqids.SqidType(), nullable=False),
        sa.Column("id", app.utils.sqids.SqidType(), autoincrement=True, nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("deleted_at", sa.DateTime(timezone=True), nullable=True),
        sa.CheckConstraint(
            "(percent IS NULL) OR (percent >= 0 AND percent <= 100)",
            name="ck_payment_percent_0_100",
        ),
        sa.ForeignKeyConstraint(["campaign_id"], ["campaigns.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["team_id"], ["teams.id"], ondelete="RESTRICT"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_payment_blocks_campaign_id"),
        "payment_blocks",
        ["campaign_id"],
        unique=False,
    )
    op.create_index(
        "ix_payment_blocks_campaign_order",
        "payment_blocks",
        ["campaign_id", "order_index"],
        unique=False,
    )
    op.create_index(
        op.f("ix_payment_blocks_deleted_at"),
        "payment_blocks",
        ["deleted_at"],
        unique=False,
    )
    op.create_index(op.f("ix_payment_blocks_team_id"), "payment_blocks", ["team_id"], unique=False)
    op.drop_column("brands", "brand_values")
    op.drop_column("brands", "target_audience")
    op.drop_column("brands", "tone_of_voice")
    op.add_column(
        "campaigns",
        sa.Column(
            "counterparty_type",
            sa.Enum("AGENCY", "BRAND", name="counterpartytype"),
            nullable=True,
        ),
    )
    op.add_column(
        "campaigns",
        sa.Column("counterparty_name", sa.String(length=255), nullable=True),
    )
    op.add_column(
        "campaigns",
        sa.Column("counterparty_email", sa.String(length=255), nullable=True),
    )
    op.add_column("campaigns", sa.Column("compensation_total_usd", sa.Float(), nullable=True))
    op.add_column("campaigns", sa.Column("payment_terms_days", sa.Integer(), nullable=True))
    op.add_column("campaigns", sa.Column("flight_start_date", sa.Date(), nullable=True))
    op.add_column("campaigns", sa.Column("flight_end_date", sa.Date(), nullable=True))
    op.add_column("campaigns", sa.Column("ftc_string", sa.String(length=255), nullable=True))
    op.add_column("campaigns", sa.Column("usage_duration", sa.String(length=128), nullable=True))
    op.add_column("campaigns", sa.Column("usage_territory", sa.String(length=128), nullable=True))
    op.add_column("campaigns", sa.Column("usage_paid_media_option", sa.Boolean(), nullable=True))
    op.add_column(
        "campaigns",
        sa.Column("exclusivity_category", sa.String(length=128), nullable=True),
    )
    op.add_column("campaigns", sa.Column("exclusivity_days_before", sa.Integer(), nullable=True))
    op.add_column("campaigns", sa.Column("exclusivity_days_after", sa.Integer(), nullable=True))
    op.add_column(
        "campaigns",
        sa.Column(
            "ownership_mode",
            sa.Enum("BRAND_OWNED", "CREATOR_OWNED", "SHARED", name="ownershipmode"),
            nullable=True,
        ),
    )
    op.add_column("campaigns", sa.Column("approval_rounds", sa.Integer(), nullable=True))
    op.add_column("campaigns", sa.Column("approval_sla_hours", sa.Integer(), nullable=True))
    op.add_column(
        "deliverables",
        sa.Column(
            "deliverable_type",
            sa.Enum(
                "INSTAGRAM_FEED_POST",
                "INSTAGRAM_STORY_FRAME",
                "INSTAGRAM_REEL",
                "INSTAGRAM_CAROUSEL",
                "TIKTOK_VIDEO",
                "TIKTOK_PHOTO_POST",
                "YOUTUBE_VIDEO",
                "YOUTUBE_SHORT",
                "YOUTUBE_COMMUNITY_POST",
                "FACEBOOK_POST",
                "FACEBOOK_STORY",
                "FACEBOOK_REEL",
                "BLOG_POST",
                "PODCAST_EPISODE",
                "EMAIL_NEWSLETTER",
                name="deliverabletype",
            ),
            nullable=True,
        ),
    )
    op.add_column(
        "deliverables",
        sa.Column("count", sa.Integer(), nullable=False, server_default="1"),
    )
    op.add_column("deliverables", sa.Column("posting_start_date", sa.Date(), nullable=True))
    op.add_column("deliverables", sa.Column("posting_end_date", sa.Date(), nullable=True))
    op.add_column(
        "deliverables",
        sa.Column("handles", postgresql.ARRAY(sa.String()), nullable=True),
    )
    op.add_column(
        "deliverables",
        sa.Column("hashtags", postgresql.ARRAY(sa.String()), nullable=True),
    )
    op.add_column(
        "deliverables",
        sa.Column("disclosures", postgresql.ARRAY(sa.String()), nullable=True),
    )
    op.add_column(
        "deliverables",
        sa.Column("approval_required", sa.Boolean(), nullable=False, server_default="true"),
    )
    op.add_column("deliverables", sa.Column("approval_rounds", sa.Integer(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("deliverables", "approval_rounds")
    op.drop_column("deliverables", "approval_required")
    op.drop_column("deliverables", "disclosures")
    op.drop_column("deliverables", "hashtags")
    op.drop_column("deliverables", "handles")
    op.drop_column("deliverables", "posting_end_date")
    op.drop_column("deliverables", "posting_start_date")
    op.drop_column("deliverables", "count")
    op.drop_column("deliverables", "deliverable_type")
    op.drop_column("campaigns", "approval_sla_hours")
    op.drop_column("campaigns", "approval_rounds")
    op.drop_column("campaigns", "ownership_mode")
    op.drop_column("campaigns", "exclusivity_days_after")
    op.drop_column("campaigns", "exclusivity_days_before")
    op.drop_column("campaigns", "exclusivity_category")
    op.drop_column("campaigns", "usage_paid_media_option")
    op.drop_column("campaigns", "usage_territory")
    op.drop_column("campaigns", "usage_duration")
    op.drop_column("campaigns", "ftc_string")
    op.drop_column("campaigns", "flight_end_date")
    op.drop_column("campaigns", "flight_start_date")
    op.drop_column("campaigns", "payment_terms_days")
    op.drop_column("campaigns", "compensation_total_usd")
    op.drop_column("campaigns", "counterparty_email")
    op.drop_column("campaigns", "counterparty_name")
    op.drop_column("campaigns", "counterparty_type")
    op.add_column(
        "brands",
        sa.Column("tone_of_voice", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "brands",
        sa.Column("target_audience", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "brands",
        sa.Column("brand_values", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.drop_index(op.f("ix_payment_blocks_team_id"), table_name="payment_blocks")
    op.drop_index(op.f("ix_payment_blocks_deleted_at"), table_name="payment_blocks")
    op.drop_index("ix_payment_blocks_campaign_order", table_name="payment_blocks")
    op.drop_index(op.f("ix_payment_blocks_campaign_id"), table_name="payment_blocks")
    op.drop_table("payment_blocks")

    # Drop enum types
    sa.Enum(name="counterpartytype").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="ownershipmode").drop(op.get_bind(), checkfirst=True)
    sa.Enum(name="deliverabletype").drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
